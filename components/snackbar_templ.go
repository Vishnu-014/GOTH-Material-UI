// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Snackbar() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n        function showSnackbar(message, type = \"info\", duration = 3000, position = \"bottom-center\") {\n            const existing = document.querySelector(\".snackbar\");\n            if (existing) existing.remove();\n\n            const snackbar = document.createElement(\"div\");\n            snackbar.className = `snackbar snackbar-${type} snackbar-${position}`;\n            snackbar.textContent = message;\n\n            document.body.appendChild(snackbar);\n\n            // Slide in\n            requestAnimationFrame(() => {\n                snackbar.classList.add(\"show\");\n            });\n\n            // Auto-dismiss\n            setTimeout(() => {\n                snackbar.classList.remove(\"show\");\n                setTimeout(() => snackbar.remove(), 300);\n            }, duration);\n        }\n\n        window.showSnackbar = showSnackbar;\n    </script><style>\n        .snackbar {\n            position: fixed;\n            min-width: 280px;\n            max-width: 90%;\n            background-color: #333;\n            color: white;\n            padding: 14px 20px;\n            border-radius: 6px;\n            font-size: 15px;\n            text-align: center;\n            box-shadow: 0 4px 12px rgba(0,0,0,0.2);\n            opacity: 0;\n            transition: all 0.3s ease-in-out;\n            z-index: 9999;\n        }\n\n        /* Centered positions */\n        .snackbar-top-center {\n            top: 20px;\n            left: 50%;\n            transform: translate(-50%, -100%);\n        }\n\n        .snackbar-bottom-center {\n            bottom: 20px;\n            left: 50%;\n            transform: translate(-50%, 100%);\n        }\n\n        /* Side positions */\n        .snackbar-top-left {\n            top: 20px;\n            left: 20px;\n            transform: translateY(-100%);\n        }\n\n        .snackbar-top-right {\n            top: 20px;\n            right: 20px;\n            transform: translateY(-100%);\n        }\n\n        .snackbar-bottom-left {\n            bottom: 20px;\n            left: 20px;\n            transform: translateY(100%);\n        }\n\n        .snackbar-bottom-right {\n            bottom: 20px;\n            right: 20px;\n            transform: translateY(100%);\n        }\n\n        /* Show state */\n        .snackbar.show.snackbar-top-center,\n        .snackbar.show.snackbar-bottom-center {\n            transform: translate(-50%, 0);\n            opacity: 1;\n        }\n\n        .snackbar.show.snackbar-top-left,\n        .snackbar.show.snackbar-top-right,\n        .snackbar.show.snackbar-bottom-left,\n        .snackbar.show.snackbar-bottom-right {\n            transform: translateY(0);\n            opacity: 1;\n        }\n\n        /* Variant styles */\n        .snackbar-success {\n            background-color: #16a34a;\n        }\n\n        .snackbar-error {\n            background-color: #dc2626;\n        }\n\n        .snackbar-info {\n            background-color: #2563eb;\n        }\n\n        .snackbar-warning {\n            background-color: #d97706;\n        }\n    </style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
